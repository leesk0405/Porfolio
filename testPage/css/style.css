@charset "utf-8";
:lang(ko) {word-break: keep-all; line-break:normal;}
::selection {background:#31a; color:white;}
/*폰트 설성*/
@font-face { 
  font-family:"BIZ-UDPGothic";
  src: url("font/BIZ-UD/BIZ-UDPGothic.ttf") format("truetype");
  font-weight:400;
  font-display : swap;
} 

@font-face { 
  font-family:"BIZ-UDPGothic";
  src: url("font/BIZ-UD/BIZ-UDPGothic-Bold.ttf") format("truetype");
  font-weight:700;
  font-display : swap;
} 

@font-face { 
  font-family:"KoddiUDOnGothic";
  src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-Regular.woff") format("woff");
  src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-Regular.otf") format("opentype");
  src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-Regular.woff2") format("woff2");
  font-weight:400;
  font-display : swap;
} 
@font-face { 
  font-family:"KoddiUDOnGothic";
  src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-Bold.woff2") format("woff2");
  src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-Bold.woff") format("woff");
  src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-Bold.otf") format("opentype");
  font-weight:700;
  font-display : swap;
} 
@font-face { 
  font-family:"KoddiUDOnGothic";
  src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-ExtraBold.woff2") format("woff2");
  src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-ExtraBold.woff") format("woff");
  src: url("font/KoddiUDOnGothic/KoddiUDOnGothic-ExtraBold.otf") format("opentype");
  font-weight:900;
  font-display : swap;
}

/*숨김텍스트 설정*/
.hidden, .blind, .a11y-txt, .sr-only, .a11y_txt {
  overflow: hidden;
  border: 0;
  position: absolute;
  /* relative를 사용해도 무관할 듯 하다 */
  z-index: -1;
  width: 1px;
  height: 1px;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
}


*,
*::before,
*::after {
  font-size:1rem;
  position: relative;
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* 보다 직관적인 box-sizing로 설정 */
}
 
:where(html) {
  -webkit-text-size-adjust: none; /* iOS의 가로 모드에서 텍스트가 조절되지 않도록 한다 */
  color-scheme: dark light; /* 사용자가 다크 테마일 경우 자동적으로 다크 테마가 된다 */
  font-family:"KoddiUDOnGothic", "BIZ-UDPGothic", sans-serif, serif;
}
 
@supports not (min-block-size: 100dvb) {
  :where(html) {
    block-size: 100%;
  }
}
 
 html {scroll-behavior: smooth;}
@media (prefers-reduced-motion: no-preference) {
  :where(html:focus-within) {
    scroll-behavior: smooth; /* 무언가에 포커싱되었을 때만 부드럽게 스크롤 */
  }
}
 
:where(input, button, textarea, select, a) {
  font: inherit; /* 입력 서식은 부모의 폰트 속성 계승 */
}
 
:where(body):not(img) {
  line-height: 1.5rem; /* 가독성 있는 행 높이 */
  font-size:1rem;
  -webkit-font-smoothing: antialiased; /* 텍스트 렌더링 개선 */
}
 
:where(textarea) {
  resize: vertical; /* 멀티라인 편집창의 가로 크기 조정 무효 */
  resize: block;
  padding:1rem;
}
 
:where(:focus, button, label, select, summary, [role='button'], [role='option'], [type="file"], [type="file"]::file-selector-button) {
  cursor: pointer; /* 상호작용 가능한 요소임을 알 수 있도록 커서 지정 */
}
 
:where(:disabled) {
  cursor: not-allowed; /* 입력서식 비활성화 시 포커스 무효화 */
}
 
:where(label:has(> input:disabled), label:has(+ input:disabled), input[type="radio"]:disabled + label, input[type="checkbox"]:disabled + label) {
  cursor: not-allowed; /* 입력서식 비활성화 시 라벨도 커서 무효화 */
}
 
:where(button) {
  border-style: none; /* 버튼의 기본 테두리 제거 필요 시 별도 선언 */
}
 
:where(a) {
  color: inherit;
  display: inline-flex; 
  text-decoration:transparent; 
  transition:text-decoration 0.2s;
  text-underline-offset: 4px; /* 링크 텍스트와 언더라인 사이에 공간 주기 */
}
a:focus, a:hover {
  text-decoration:underline;
}

:where(ul, ol, li) {
  list-style: none; /* 뷰렛 삭제 필요 시 별도로 선언 */
}
 
:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: inline-flex; /* 보다 예측 가능한 멀티미디어 요소 */
  aspect-ratio:auto;
  object-fit: contain;
  width:100%; /*부모요소에 꽉 차게 / 부모요소를 벗어나지 않도록*/
}

:where(img, picture, svg) {
  max-inline-size: 100%; /* images should never overflow past the available space */
  block-size: auto; /* 콘텐츠 종횡비 유지 */
}
 
:where(p, h1, h2, h3, h4, h5, h6) {
  overflow-wrap: break-word; /* 길이가 넘칠 경우 줄바꿈 */
}
 
 
:where(hr) { /* 보다 일관성 있는 스타일리쉬한 hr */
  border: none;
  border-block-start: 1px solid;
  color: inherit;
  block-size: 0;
  overflow: visible;
}
table {
  border-collapse: collapse;
}

::-webkit-scrollbar {
    width: 1rem;  /* 스크롤바의 너비 */
}


::-webkit-scrollbar-thumb {
    border-radius: 10rem; /* 스크롤바의 스타일 */
    border:1px solid rgba(0 0 0 / 0.3);
    background-color:rgba(0 0 0 / 0.5);
  cursor: pointer;
}


::-webkit-scrollbar-track {
  background-color:rgba(0 0 0 / 0.1);
  border-radius: 10rem; /*스크롤바 뒷 배경 스타일*/
}

fieldset {boreder:none;}




/* @charset "utf-8"; */
/*Mobile First*/
.pc_view {display: none;}
.dark_view {display: none;}
.center {
  width:90vw;
  padding:2rem 0px;
  margin:0px auto;
}
fieldset {border:none;}
h2 {padding:1rem;}
address {
  text-align: center;
  font-style: normal;
}

a:where(:hover, :focus) {
  text-decoration:underline wavy rgba(0 0 0 / 0.5);
  text-underline-offset:4px;}
a:active, summary:active {
  transition:0.2s filter, 0.4s transform;
  filter:brightness(1.2) saturation(1.2);
}

input, textarea {
  display:inline-flex;
  align-items: baseline;
  min-width: 1.25rem;
  min-height: 1.25rem;
  vertical-align: middle;
  accent-color:#54a;
  padding:0px 0.5rem;
}

th,td, a, button {padding:0.5rem;}

svg {
  fill:#64a;
  vertical-align: middle;
  }

/*대중교통*/
.metro-line {
  text-shadow:1px 1px rgba(0 0 0 / 0.5), -1px -1px rgba(0 0 0 / 0.5);
  display:inline-flex;
  font-size: 1rem;
  border-radius:100px;
  justify-content:center;
  align-items:center;
  margin-right:10px;
  min-width:2rem;
  min-height:2rem;
  color:white;
}

#logo {width: 3rem; height: 3rem; padding-right: 0.5rem;}
.numline {aspet-ratio:1/1;}
.line1 {background:#052F93;}
.line2 {background:#10A643;}
.line3 {background:#DE6D00;}
.line4 {background:#0099d1;}
.line5 {background:#A95094;}
.line6 {background:#D08D1A;}
.line7 {background:#657931;}
.line8 {background:#E74E6D;}
.line9 {background:#B58600;}
.gyline {background-color:#5F9C82; padding:0px 10px;}

.bus-line {
  text-shadow:1px 1px rgba(0 0 0 / 0.5), -1px -1px rgba(0 0 0 / 0.5);
  display:inline-flex;
  font-size:1rem;
  justify-content:center;
  align-items:center;
  margin-right:10px;
  border-radius:5px;
  color:#fff;
  padding:0px 5px;}
.g-bus {background-color:#5BB025;}
.b-bus {background-color:#3D5BAB;}
.r-bus {background-color:#F73711;}
.meter {color:#C30; padding:0px 10px;}



/*Desktop*/
@media screen and (1100px < width) {
  .center {
    width:55vw;
    margin:0px auto;
  }
  .pc_view {display:block;}
  th,td {padding:1rem;}
}

/*Tablet*/
@media screen and (760px < width < 1100px) {
  .center {
    width:70vw;
    margin:0px auto;
  }

}

/*Mobile*/
@media screen and (320px < width < 760px) {
  tr {display: flex;}
}

/*Watch*/
@media screen and (width < 320px) {
  .center {
    width:95vw;
    margin:0px auto;
  }

}
/*Dark Mode Layout*/
@media (prefers-color-scheme:dark) {
  .light_view {display: none;}
  .dark_view {display:unset;}
  svg {fill:#baf;}
}




/* @charset "utf-8"; */

table {
    margin: 0px auto;
}

tr {
    border: solid 1px;
}

th {
    background: #ddd;
}

form th[scope="row"] {
    text-align: left;
}

/*수정 창*/
#user_name {
    -webkit-ime-mode: active;
    -moz-ime-mode: active;
    -ms-ime-mode: active;
    ime-mode: active;
}

label[for="custom_text"] {
    position: absolute;
    top: calc(2rem + 5px);
    left: calc(1rem + 5px);
    background: inherit;
    transition: top 0.2s, left 0.2s, scale 0.2s;
    scale: 1;
}

input:where(:focus, :not(:placeholder-shown))+label[for="custom_text"] {
    scale: 0.8;
    top: 5px;
    left: 5px;

}

.custom_input * {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

.custom_input :where(input[type="text"], [type="password"])+label {
    opacity: 0.7;
}

.custom_input :where(input[type="text"], [type="password"]) {
    background: transparent;
    border: none;
    border-bottom: solid #64a 3px;
    padding: 5px;
    transition: opacity 0.2s;
    outline-offset: 4px;
    margin-top: 1rem;
}

.custom_input :where(input[type="text"], [type="password"]):focus+label {
    opacity: 1;
}

.custom_input input[type="text"]::placeholder {
    color: transparent;
    transition: color 0.2s;
}

.custom_input input[type="text"]:where(:focus)::placeholder {
    color: #768;
}

/*암호 편집 창*/
.custom_input [type="password"] {
    margin-top: 0px;
    webkit-text-security: disc;
    -moz-text-security: circle;
    text-security: circle;
}

.custom_input :where(input[type="radio"], input[type="checkbox"]) {
    border: 2px solid #64a;
    border-radius: 10rem;
    transition: 0.1s scale;
}

label:hover+.custom_input :where(input[type="radio"], input[name="custom_checkbox"]),
.custom_input :where(input[type="radio"], input[name="custom_checkbox"]):hover,
.custom_input :where(input[type="radio"], input[name="custom_checkbox"]):focus {
    scale: 1.2;
}

.custom_input :where(input[type="checkbox"]:checked) {
    background: radial-gradient(circle, rgba(70 40 150 / 1)30%, rgba(120 100 255 / 1) 70%);
}

.custom_input :where(input[type="checkbox"]:checked)::before {
    content: '';
    width: 4px;
    height: 8px;
    position: absolute;
    rotate: 45deg;
    top: 4px;
    right: 6px;
    border-bottom: 2px solid white;
    border-right: 2px solid white;
}

/*스위치 체크박스*/
label[for="switch_checkbox"]+div {
    display: inline-flex;
    justify-content: center;
    vertical-align: middle;
    height: 1.5rem;
    border-radius: 10rem;
    background: rgba(0 0 0 / 0.5);
    border: rgba(200 200 200 / 0.5) 1px solid;
    aspect-ratio: 2/1;
    transition: 0.2s background, 0.2s left;
}

label[for="switch_checkbox"]+div label {
    width: 100%;
    height: 100%;
    display: flex;
    position: relative;
}

label[for="switch_checkbox"]+div :where(i, input) {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    border-radius: 10rem;
}

label[for="switch_checkbox"]+div i.on {
    left: 8px;
    height: 8px;
    width: 2px;
    background-color: rgba(255 255 255 / 0.5);
}

label[for="switch_checkbox"]+div i.off {
    right: 8px;
    width: 8px;
    height: 8px;
    border: rgba(255 255 255 / 0.5) solid 1px;
}

label[for="switch_checkbox"]+div input {
    outline-offset: 4px;
    left: 0.125rem;
    transition: left 0.2s;
    background: linear-gradient(to bottom, rgba(255 255 255 / 1), rgba(200 200 200 / 0.99));
    border: solid 1px rgba(200 200 200 / 0.5);
}

label[for="switch_checkbox"]+div input:checked {
    left: 1.5rem;
}

.custom_input :where(input[id="switch_checkbox"]:checked)::before {
    content: '';
    display: none;
}

label[for="switch_checkbox"]+div:has(input:checked) {
    background: #64a;
}

/*라디오*/
.custom_input :where(input[type="radio"]:checked) {
    background: radial-gradient(circle, rgba(70 40 150 / 1)10%, rgba(120 100 255 / 1) 50%, rgba(255 255 255 / 1) 50%);

}

.custom_input :where(input[type="radio"]:disabled, input[type="checkbox"]:disabled) {
    filter: brightness(1.5) saturate(0.3);
}

.custom_input :where(input[type="radio"]:disabled, input[type="checkbox"]:disabled):hover {
    scale: 1;
}

.custom_input :where(input[type="radio"]:disabled, input[type="checkbox"]:disabled):before {
    content: '';
    display: flex;
    width: 1.25rem;
    height: 1.25rem;
    border: 2px solid #64a;
    border-radius: 12rem;
    position: absolute;
    top: -2px;
    left: -2px;
    transform: translate(0%, 0%);
    filter: brightness(0.75);
}

.custom_input :where(input[type="radio"]:disabled, input[type="checkbox"]:disabled):after {
    content: '';
    position: absolute;
    top: -2px;
    left: 7px;
    width: 2px;
    height: 1.25rem;
    rotate: 45deg;
    background-color: #64a;
    filter: brightness(0.75);
}

/*별점 라디오 버튼*/
.custom_input :where(input[name="star_radio"]) {
    border: none !important;
    scale: 1 !important;
    background: transparent;
    position: absolute;
    left: 0px;
    width: 100%;
    height: 100%;
    transition: 0.2s filter;
}

.custom_input label:has(input[name="star_radio"]) svg {
    width: 1.25rem;
    height: 1.25rem;
}

.custom_input label:has(input[name="star_radio"]):hover {
    filter: brightness(1.3);
    transition: 0.2s filter;
}

.custom_input label:has(input[name="star_radio"]) {
    padding: 0.5rem 1rem;
    border-radius: 10rem;
}

input[name="star_radio"]:where(:focus, :hover) {
    scale: 1;
}

.custom_input label:has(input[name="star_radio"]:checked) {
    box-shadow: 0px 0px 0px 3px #64a inset;
}

label:has(input[name="star_radio"]) span {
    width: 5rem;
    text-align: right;
}

label:has(svg) {
    display: inline-flex;
    align-items: center;
}

/*탭 라디오*/
.custom_input>p:has(input[name="tab_radio"])+p {
    width: 80%;
    padding: 1rem;
    border: 5px solid #64a;
    top: -1rem;
    border-radius: 1rem;
    border-top-left-radius: 0px;
}

.custom_input label:has(input[name="tab_radio"]) {
    background: #64a;
    color: white;
    display: inline-flex;
    margin-right: -4px;
    padding: 1rem;
    bottom: -5px;
    border-top-left-radius: 1rem;
    border-top-right-radius: 1rem;
    text-align: center;
    border: 5px solid #64a;
    border-bottom: none;
    cursor: pointer;
    z-index: 2;
    transition: background 0.2s, font-weight 0.2s;

}

.custom_input :where(input[name="tab_radio"]) {
    border: none !important;
    scale: 1 !important;
    background: transparent;
    position: absolute;
    left: 2.5px;
    top: 2.5px;
    border-radius: 0px;
    border-top-left-radius: calc(1rem - 5px);
    border-top-right-radius: calc(1rem - 5px);
    width: calc(100% - 5px);
    height: calc(100% - 10px);
    z-index: -1;
}

.custom_input label:has(input[name="tab_radio"]:checked) {
    padding-bottom: 2rem;
    background: transparent;
    font-weight: 900;
    color: #64a;
    top: calc(-1rem + 5px);
}

.custom_input :where(input[name="tab_radio"]:checked) {}


/*슬라이더*/
/*********** Baseline, reset styles ***********/
.custom_input input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    background: transparent;
    cursor: pointer;
    min-width: 10rem;
    width: 20rem;
    border-radius: 10rem;
    display: inline-flex;
    align-items: center;
    padding: 1rem;
}


/******** Chrome, Safari, Opera and Edge Chromium styles ********/
/* slider track */
.custom_input input[type="range"]::-webkit-slider-runnable-track {
    background-color: #64a;
    border: 1px solid #64a;
    border-radius: 10rem;
    height: 0.5rem;
    width: 100%;
    position: relative;

}

.custom_input input[type="range"]::-webkit-scrollbar {
    -webkit-appearance: none;
    /* Override default look */
    appearance: none;
    /* Centers thumb on the track */
    background-color: #64a;
    width: 100%;

}

/* slider thumb */
.custom_input input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    /* Override default look */
    appearance: none;
    /* Centers thumb on the track */
    background-color: #ffffff;
    border-radius: 1rem;
    height: 1.25rem;
    width: 1.25rem;
    margin-top: -0.5rem;
}

/*********** Firefox styles ***********/
/* slider track */
.custom_input input[type="range"]::-moz-range-track {
    background-color: #64a;
    border-radius: 0.5rem;
    height: 0.5rem;
}

/* slider thumb */
.custom_input input[type="range"]::-moz-range-thumb {
    background-color: #ffffff;
    border: none;
    /*Removes extra border that FF applies*/
    border-radius: 1rem;
    height: 1.25rem;
    width: 1.25rem;
}

.custom_input input[type="range"]:focus::-moz-range-thumb {
    outline: 3px solid #ffffff;
    outline-offset: 0.125rem;
}

/*컬러*/
.custom_input:has(input[type="color"]) {
    display: flex;
    align-items: center;
    justify-content: center;
}

.custom_input input[type="color"] {
  display: flex;
  justify-content: center;
    width: 7rem;
    height: auto;
    background-color: transparent;
    border: none;
    padding: 0px;
    cursor: pointer;
    aspect-ratio: 1 / 1;
    text-align: center;
}

.custom_input input[type="color"]::-webkit-color-swatch {
    border: none;
}

.custom_input input[type="color"]::-moz-color-swatch {
    border: none;
}

label[for="custom_color"] {
    padding: 1rem;
    border: #eee 1px solid;
    max-width: 8rem;
    background: rgba(255 255 255 / 0.1);
    box-shadow: 1rem 1rem 1rem rgba(0 0 0 / 0.1);
    aspect-ratio: 1/1.58;
}
label[for="custom_color"] div {
  display: flex;
  justify-content: center;
}

.custom_input select,
.custom_input select option {
    background-color: #64a;
    color:#fff;
    border: 1px solid #64aa;
    padding: 0.5rem;
    transition:filter 0.2s;
}

.custom_input select:hover,
.custom_input select option:hover {
    filter: brightness(1.2) saturate(1.2);
}

/*파일*/
label:has(#file_text) {
    padding: 1rem;
    display: flex;
    align-items: center;
}

label:has(#file_text):where(:hover, :focus) input {
    opacity: 1;
}
.custom_input input[type="file"] {
  min-height: 3rem;
}
.custom_input input[type="file"]::file-selector-button {
    border: #64aa solid 2px;
    background-color: #64a;
    padding: 0.5rem;
    color: white;
    cursor: pointer;
    position:absolute;
    right:0px;

}

#file_text {
    margin-top: 0px;
    z-index: -1;
}

span:has(#custom_design_file:focus) {
    border: 2px solid white;
    box-shadow: 0px 0px 0px 1px black inset;
    border-radius: 4px;
}

.custom_input label[for="custom_design_file"] span {
    border: #64aa solid 2px;
    background-color: #64a;
    padding: 0.5rem;
    color: white;
    margin-left: 0.5rem;
}




/*Dark Mode Layout*/
@media (prefers-color-scheme:dark) {
    th {
        background: #333;
    }

    .custom_input select,
    .custom_input select option {
        background-color: #baf;
        border: 1px solid #baf9;
        color:black;
    }

    .custom_input :where(input[type="text"], [type="password"]) {
        border-bottom: solid #baf 3px;
    }

    .custom_input :where(input[type="radio"], input[type="checkbox"]) {
        border: 2px solid #baf;
    }

    .custom_input :where(input[type="radio"]:disabled, input[type="checkbox"]:disabled):before {
        border: 2px solid #baf;
    }

    .custom_input :where(input[type="radio"]:disabled, input[type="checkbox"]:disabled):after {
        background-color: #baf;
    }

    .custom_input label:has(input[name="tab_radio"]) {
        background: #baf;
        border: 5px solid #baf;
        color: black;
    }

    .custom_input label:has(input[name="tab_radio"]:checked) {
        color: #baf;
    }

    .custom_input>p:has(input[name="tab_radio"])+p {
        border: 5px solid #baf;
    }

    .custom_input label:has(input[name="tab_radio"]:checked) {
        color: #baf;
    }

    .custom_input label:has(input[name="star_radio"]:checked) {
        box-shadow: 0px 0px 0px 3px #baf inset;
    }

    .custom_input label:has(input[name="star_radio"]):hover {
        filter: saturate(8) hue-rotate(-30deg);
    }

    label[for="custom_color"] {
        border: #555 1px solid;
    }

    .custom_input input[type="range"]::-webkit-slider-runnable-track {
        border: 1px solid #baf;
    }

    .custom_input input[type="range"]::-webkit-scrollbar {
        background-color: #baf;
    }

    .custom_input input[type="range"]::-moz-range-track {
        background-color: #baf;
    }

    .custom_input input[type="file"]::file-selector-button {
        border: #bafa solid 2px;
        background-color: #baf;
        color: #000;
    }

    .custom_input label[for="custom_design_file"] span {
        border: #bafa solid 2px;
        background-color: #baf;
        color: black;
    }

}